name: ShowPot-Dev-CD

on:
  pull_request:
    branches:
      - hotfix_dev
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'liberica'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Copy Secrets
        env:
          ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run:
          echo $ACCESS_KEY > ./app/src/main/resources/application-dev.yml
          echo $SECRET_KEY > ./app/src/main/resources/application-dev.yml

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build

      - name: Prepare File for Deployment
        run: |
          mkdir -p deployment
          cp Dockerfile docker-compose.yml deployment/
          cp -r ./app/build/libs deployment/

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Add Github Actions IP on Security Group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_DEV_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Upload files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_DEV_SSH_PRIVATE_KEY }}
          source: "deployment/*"
          target: "/home/ec2-user/"

      - name: Deploy using Docker Compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_DEV_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/deployment/
            docker-compose down
            docker-compose up -d --build

      - name: Remove Github Actions IP from Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_DEV_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Backend CD for Dev Server Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          title: ✅ 개발 서버 배포 프로세스가 완료되었습니다! ✅
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          content: "<@1084774841460215839> <@281597829636423682> 배포가 정상적으로 이뤄졌는지 확인해주세요!"
          color: 00FF00
          username: showPot-Bot
          avatar_url: ${{ secrets.DISCORD_NOTIFICATION_SUCCESS_AVATAR_URL }}

      - name: Backend CD for Dev Server Discord Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          title: ❗️개발 서버 배포 프로세스가 실패했습니다! ❗️
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          color: FF0000
          username: showPot-Bot
          avatar_url: ${{ secrets.DISCORD_NOTIFICATION_FAILED_AVATAR_URL }}
